{"ast":null,"code":"var _jsxFileName = \"D:\\\\React-Course-Demos\\\\Learning-Typescript\\\\second-demo\\\\src\\\\components\\\\Todos.tsx\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\n// const Todos = (props: { items: string[], children}) => { //it'll become cumbersome\nconst Todos = props => {\n  //React.FC is a generic type , FC stands for functional component\n  return /*#__PURE__*/_jsxDEV(\"ul\", {\n    children: props.items.map(item => /*#__PURE__*/_jsxDEV(\"li\", {\n      children: item\n    }, item.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 38\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 9\n  }, this);\n};\n\n_c = Todos;\nexport default Todos;\n\nvar _c;\n\n$RefreshReg$(_c, \"Todos\");","map":{"version":3,"names":["Todos","props","items","map","item","id"],"sources":["D:/React-Course-Demos/Learning-Typescript/second-demo/src/components/Todos.tsx"],"sourcesContent":["import Todo from \"../models/todo\"\r\n\r\n// const Todos = (props: { items: string[], children}) => { //it'll become cumbersome\r\nconst Todos: React.FC<{ items: Todo[] }> = (props) => { //React.FC is a generic type , FC stands for functional component\r\n    return (\r\n        <ul>\r\n            {props.items.map(item => <li key={item.id}>{item}</li>)}\r\n        </ul>\r\n    )\r\n}\r\n\r\nexport default Todos\r\n"],"mappings":";;;AAEA;AACA,MAAMA,KAAkC,GAAIC,KAAD,IAAW;EAAE;EACpD,oBACI;IAAA,UACKA,KAAK,CAACC,KAAN,CAAYC,GAAZ,CAAgBC,IAAI,iBAAI;MAAA,UAAmBA;IAAnB,GAASA,IAAI,CAACC,EAAd;MAAA;MAAA;MAAA;IAAA,QAAxB;EADL;IAAA;IAAA;IAAA;EAAA,QADJ;AAKH,CAND;;KAAML,K;AAQN,eAAeA,KAAf"},"metadata":{},"sourceType":"module"}