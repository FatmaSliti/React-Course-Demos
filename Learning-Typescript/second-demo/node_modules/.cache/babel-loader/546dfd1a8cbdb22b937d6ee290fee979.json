{"ast":null,"code":"var _jsxFileName = \"D:\\\\React-Course-Demos\\\\Learning-Typescript\\\\second-demo\\\\src\\\\components\\\\NewTodo.tsx\",\n    _s = $RefreshSig$();\n\nimport { useRef } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst NewTodo = props => {\n  _s();\n\n  //define the concrete prop obj definition of my own props which I wanna add in here that will be merged with the brace props\n  const todoTextInputRef = useRef(null);\n\n  const submitHandler = event => {\n    //it's the event obj type which we get when we listen to the form submission\n    event.preventDefault(); // const enteredText = todoTextInputRef.current?.value;\n\n    const enteredText = todoTextInputRef.current.value; //we put '!' if we're 100% sure that the value will be there otherwise we put '?'\n\n    if (enteredText.trim().length === 0) {\n      //throw an error\n      return;\n    }\n\n    props.onAddTodo(enteredText);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: submitHandler,\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"text\",\n      children: \"Todo Text\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      id: \"text\",\n      ref: todoTextInputRef\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      children: \"Add Todo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 12\n  }, this);\n};\n\n_s(NewTodo, \"1sC+Y33RgTD/2YiEPp+XilOCiTo=\");\n\n_c = NewTodo;\nexport default NewTodo;\n\nvar _c;\n\n$RefreshReg$(_c, \"NewTodo\");","map":{"version":3,"names":["useRef","NewTodo","props","todoTextInputRef","submitHandler","event","preventDefault","enteredText","current","value","trim","length","onAddTodo"],"sources":["D:/React-Course-Demos/Learning-Typescript/second-demo/src/components/NewTodo.tsx"],"sourcesContent":["import { useRef } from \"react\";\r\n\r\nconst NewTodo: React.FC = (props) => { //define the concrete prop obj definition of my own props which I wanna add in here that will be merged with the brace props\r\n    const todoTextInputRef = useRef<HTMLInputElement>(null);\r\n\r\n    const submitHandler = (event: React.FormEvent) => { //it's the event obj type which we get when we listen to the form submission\r\n        event.preventDefault();\r\n\r\n        // const enteredText = todoTextInputRef.current?.value;\r\n        const enteredText = todoTextInputRef.current!.value;\r\n\r\n        //we put '!' if we're 100% sure that the value will be there otherwise we put '?'\r\n\r\n        if (enteredText.trim().length === 0) {\r\n            //throw an error\r\n            return;\r\n        }\r\n\r\n        props.onAddTodo(enteredText);\r\n    }\r\n\r\n    return <form onSubmit={submitHandler}>\r\n        <label htmlFor=\"text\">Todo Text</label>\r\n        <input type=\"text\" id=\"text\" ref={todoTextInputRef} />\r\n        <button>Add Todo</button>\r\n    </form>\r\n}\r\n\r\nexport default NewTodo\r\n"],"mappings":";;;AAAA,SAASA,MAAT,QAAuB,OAAvB;;;AAEA,MAAMC,OAAiB,GAAIC,KAAD,IAAW;EAAA;;EAAE;EACnC,MAAMC,gBAAgB,GAAGH,MAAM,CAAmB,IAAnB,CAA/B;;EAEA,MAAMI,aAAa,GAAIC,KAAD,IAA4B;IAAE;IAChDA,KAAK,CAACC,cAAN,GAD8C,CAG9C;;IACA,MAAMC,WAAW,GAAGJ,gBAAgB,CAACK,OAAjB,CAA0BC,KAA9C,CAJ8C,CAM9C;;IAEA,IAAIF,WAAW,CAACG,IAAZ,GAAmBC,MAAnB,KAA8B,CAAlC,EAAqC;MACjC;MACA;IACH;;IAEDT,KAAK,CAACU,SAAN,CAAgBL,WAAhB;EACH,CAdD;;EAgBA,oBAAO;IAAM,QAAQ,EAAEH,aAAhB;IAAA,wBACH;MAAO,OAAO,EAAC,MAAf;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QADG,eAEH;MAAO,IAAI,EAAC,MAAZ;MAAmB,EAAE,EAAC,MAAtB;MAA6B,GAAG,EAAED;IAAlC;MAAA;MAAA;MAAA;IAAA,QAFG,eAGH;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAHG;EAAA;IAAA;IAAA;IAAA;EAAA,QAAP;AAKH,CAxBD;;GAAMF,O;;KAAAA,O;AA0BN,eAAeA,OAAf"},"metadata":{},"sourceType":"module"}